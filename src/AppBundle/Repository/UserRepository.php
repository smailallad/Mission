<?php

namespace AppBundle\Repository;

//use Doctrine\ORM\EntityRepository;
use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository implements UserLoaderInterface
{
     /**
     * Loads the user for the given username.
     *
     * This method must return null if the user is not found.
     *
     * @param string $username The username
     *
     * @return UserInterface|null
     */
    public function loadUserByUsername($username) {

        return $this->createQueryBuilder('u')
                    ->where('u.username = :username OR u.email = :email')
                    ->setParameter('username',$username)
                    ->setParameter('email',$username)
                    ->getQuery()
                    ->getOneOrNullResult();


    }
    public function getNotRealisateursIntervention($intervention)
    {
        $qb1 = $this->getEntityManager()->createQueryBuilder();
        $qb1    ->select('IDENTITY(iu.user)')
                ->from('AppBundle:InterventionUser', 'iu')
                ->where('iu.intervention = :v1')
                ;

        //return $qb1->getQuery()->getResult(); 

        $qb2 = $this->getEntityManager()->createQueryBuilder();
        $qb2    ->select('u')
                ->from('AppBundle:User', 'u')
                ->where('u.active = true')
                ->andWhere('u.mission = true')
                ->andWhere($qb1->expr()->notIn('u', $qb1->getDQL()))
                ->orderBy('u.nom')
                ->setParameter('v1',$intervention)
        ;
        //dump($qb2);
        //throw new \Exception('Message');
        return $qb2;
        //return $qb2->getQuery()->getResult();
       
    }
    public function test()
    {
        return "smail";
    }
}
