<?php

namespace AppBundle\Repository;

/**
 * DepenseMissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepenseMissionRepository extends \Doctrine\ORM\EntityRepository
{
    public function getDepenseMissions($mission)
    {   
        $q = $this->createQueryBuilder('dm');
        $q  ->select('dm')
            ->join('dm.depense','d')
            ->addSelect('d')
            ->join('dm.justificationDepense','jd')
            ->addSelect('jd');
        $q  ->where('dm.mission = :mm');
        $q  ->orderby('dm.dateDep','ASC')
            ->setParameter('mm', $mission);
        return $q->getQuery()->getResult();
    } 

    public function getMontantDepenseMissions($mission)
    {   
        $q = $this->createQueryBuilder('e')
        ->select('SUM(e.montant) AS total')
        ->where('e.mission = :mission')
        ->setParameter('mission',$mission);
        ;
        return $q->getQuery()->getResult()[0];
    }

    public function getTotalDepenseMissions($t){
        // t = M : Mission
        // t = C : Note de frais{   
        $q = $this->createQueryBuilder('d')
            ->join('d.mission','m')
            ->join('m.user','u')
            ->select('SUM(d.montant) AS total');
        $q  ->where($q->expr()->eq($q->expr()->substring('m.code', 5,1),':v1'));
        
        $q  ->setParameter('v1', $t);

        return $q;
    }
    public function addFilterTotalDepenseMissions($q,$code,$depart,$retour,$user,$vEmploye,$vRollout,$vComptabilite){
        
        if ($code !== null){ 
            $q->andWhere($q->expr()->like('m.code', $q->expr()->literal($code .'%')));
        }
        if ($depart !== null){
            $q->andWhere('m.depart >= :d1');
            $q->setParameter('d1',$depart);
        }
        if ($retour !== null){
            $q->andWhere('m.depart <= :d2');
            $q->setParameter('d2',$retour);
        }
        if ($user !== null){
            $q->andWhere('m.user = :user');
            $q->setParameter('user',$user);
        }
        if ($vEmploye !== null){
            $q->andWhere('m.vEmploye = :employe');
            $q->setParameter('employe',$vEmploye);
        }
        if ($vRollout !== null){
            $q->andWhere('m.vRollout = :rollout');
            $q->setParameter('rollout',$vRollout);
        }
        if ($vComptabilite !== null){
            $q->andWhere('m.vComptabilite = :comptabilite');
            $q->setParameter('comptabilite',$vComptabilite);
        }

        return $q;
    }

    function getCarburant(){
        $q = $this->createQueryBuilder('dm');
        $q  ->select('dm')
            ->join('dm.depense','d')
            ->addSelect('d')
            ->join('dm.justificationDepense','jd')
            ->addSelect('jd');
        $q  ->where('d.id = 2');
        $q  ->orWhere('d.id = 3');
        $q  ->orWhere('d.id = 4');

        //$q  ->orderby('dm.dateDep','ASC');
        //$q  ->setParameter('mm', $mission);
        return $q->getQuery()->getResult();
    }
    function test(){
        $q = $this->createQueryBuilder('dm')
        ->select('SUM(dm.montant) AS dpense')
        ->addSelect('SUM(fm.montant) as frais_mission')
        ->leftjoin('dm.mission','m')
        ->addSelect('m.code,m.avance')
        ->innerJoin('AppBundle:FraisMission', 'fm', 'WITH',' fm.mission = m')
      
        ->where('m.code = :code')
        ->setParameter('code','2021M0001');
        ;
        
        //dump($q);
        $res = $q->getQuery()->execute();
        return $res;
  
    }

}
